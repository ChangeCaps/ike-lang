import std::option
import std::some
import std::none

type file = {
  path: str
}

type span = {
  file:  file
  start: int
  end:   int
}

type diagnostic::level = level::error
                       | level::warning
                       | level::help

type diagnostic = {
  level:   diagnostic::level
  message: str
  labels:  [diagnostic::label]
}

type diagnostic::label = {
  span:    span
  message: option str
}

fn diagnostic : diagnostic::level -> str -> diagnostic
fn diagnostic level message {
  diagnostic {
    level:   level
    message: message
    labels:  []
  }
}

fn diagnostic::error : str -> diagnostic
fn diagnostic::error message {
  diagnostic diagnostic::level::error message
}

fn diagnostic::warning : str -> diagnostic
fn diagnostic::warning message {
  diagnostic diagnostic::level::warning message
}

fn diagnostic::help : str -> diagnostic
fn diagnostic::help message {
  diagnostic diagnostic::level::help message
}

fn diagnostic::with-label : span -> str -> diagnostic -> diagnostic
fn diagnostic::with-label span message diagnostic {
  let label = diagnostic::label {
    span:    span
    message: some message
  }

  diagnostic {
    level:   diagnostic.level
    message: diagnostic.message
    labels:  [label; ..diagnostic.labels]
  }
}

fn diagnostic::with-span : span -> diagnostic -> diagnostic
fn diagnostic::with-span span diagnostic {
  let label = diagnostic::label {
    span:    span
    message: none 
  }

  diagnostic {
    level:   diagnostic.level
    message: diagnostic.message
    labels:  [label; ..diagnostic.labels]
  }
}
